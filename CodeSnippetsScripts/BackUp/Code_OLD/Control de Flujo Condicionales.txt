<---EXPLANATION--->
### Control de Flujo: Condicionales en C++

Los condicionales son estructuras de control de flujo que permiten tomar decisiones en el programa basadas en condiciones específicas. C++ proporciona varias estructuras condicionales, incluyendo `if`, `else if`, `else` y `switch`.

#### 1. **Condicional `if`**

La estructura `if` evalúa una condición y ejecuta un bloque de código si la condición es verdadera.

##### Sintaxis Básica

```cpp
if (condicion) {
    // Código a ejecutar si la condición es verdadera
}
```

##### Ejemplo

```cpp
#include <iostream>
using namespace std;

int main() {
    int numero = 10;
    if (numero > 5) {
        cout << "El número es mayor que 5." << endl;
    }
    return 0;
}
```

#### 2. **Condicional `if-else`**

La estructura `if-else` proporciona una alternativa en caso de que la condición `if` sea falsa.

##### Sintaxis Básica

```cpp
if (condicion) {
    // Código a ejecutar si la condición es verdadera
} else {
    // Código a ejecutar si la condición es falsa
}
```

##### Ejemplo

```cpp
#include <iostream>
using namespace std;

int main() {
    int numero = 3;
    if (numero > 5) {
        cout << "El número es mayor que 5." << endl;
    } else {
        cout << "El número es 5 o menor." << endl;
    }
    return 0;
}
```

#### 3. **Condicional `if-else if-else`**

La estructura `if-else if-else` permite evaluar múltiples condiciones secuencialmente. Se ejecuta el primer bloque de código cuya condición es verdadera.

##### Sintaxis Básica

```cpp
if (condicion1) {
    // Código a ejecutar si la condición1 es verdadera
} else if (condicion2) {
    // Código a ejecutar si la condición2 es verdadera
} else {
    // Código a ejecutar si ninguna de las condiciones anteriores es verdadera
}
```

##### Ejemplo

```cpp
#include <iostream>
using namespace std;

int main() {
    int numero = 7;
    if (numero > 10) {
        cout << "El número es mayor que 10." << endl;
    } else if (numero > 5) {
        cout << "El número es mayor que 5 pero menor o igual a 10." << endl;
    } else {
        cout << "El número es 5 o menor." << endl;
    }
    return 0;
}
```

#### 4. **Condicional `switch`**

La estructura `switch` es útil cuando se necesita evaluar una variable contra múltiples valores constantes. Es más limpia y legible que anidar múltiples `if-else` cuando se compara una sola variable con varios valores.

##### Sintaxis Básica

```cpp
switch (variable) {
    case valor1:
        // Código a ejecutar si variable == valor1
        break;
    case valor2:
        // Código a ejecutar si variable == valor2
        break;
    // Más casos según sea necesario
    default:
        // Código a ejecutar si ningún caso coincide
}
```

##### Ejemplo

```cpp
#include <iostream>
using namespace std;

int main() {
    int dia = 3;
    switch (dia) {
        case 1:
            cout << "Lunes" << endl;
            break;
        case 2:
            cout << "Martes" << endl;
            break;
        case 3:
            cout << "Miércoles" << endl;
            break;
        case 4:
            cout << "Jueves" << endl;
            break;
        case 5:
            cout << "Viernes" << endl;
            break;
        case 6:
            cout << "Sábado" << endl;
            break;
        case 7:
            cout << "Domingo" << endl;
            break;
        default:
            cout << "Día no válido" << endl;
            break;
    }
    return 0;
}
```

### Consejos y Buenas Prácticas

- **Evitar Anidamiento Extremo:** El anidamiento profundo de condicionales `if` puede hacer que el código sea difícil de leer y mantener. Considera utilizar `switch` o refactorizar el código para simplificar la lógica.
- **Usar `default` en `switch`:** Siempre proporciona un caso `default` en una estructura `switch` para manejar valores no esperados.
- **Condiciones Claras y Comprensibles:** Asegúrate de que las condiciones sean claras y fáciles de entender. Evita condiciones complejas que puedan ser confusas.

### Ejemplo Completo

```cpp
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Introduce un número: ";
    cin >> numero;

    if (numero > 0) {
        cout << "El número es positivo." << endl;
    } else if (numero < 0) {
        cout << "El número es negativo." << endl;
    } else {
        cout << "El número es cero." << endl;
    }

    char opcion;
    cout << "Introduce una opción (a, b, c): ";
    cin >> opcion;

    switch (opcion) {
        case 'a':
            cout << "Opción A seleccionada." << endl;
            break;
        case 'b':
            cout << "Opción B seleccionada." << endl;
            break;
        case 'c':
            cout << "Opción C seleccionada." << endl;
            break;
        default:
            cout << "Opción no válida." << endl;
            break;
    }

    return 0;
}
```

### Conclusión

El uso de estructuras condicionales en C++ permite a los programadores controlar el flujo de ejecución del programa de manera efectiva. Entender cómo y cuándo usar `if`, `else if`, `else`, y `switch` es esencial para escribir código claro y eficiente.
<---FILES--->
Sintaxis Básica
Sintaxis Básica Result
Ejemplo
Ejemplo Result
<---Sintaxis Básica--->
```cpp
switch (variable) {
    case valor1:
        // Código a ejecutar si variable == valor1
        break;
    case valor2:
        // Código a ejecutar si variable == valor2
        break;
    // Más casos según sea necesario
    default:
        // Código a ejecutar si ningún caso coincide
}
<---Sintaxis Básica Result--->
<---Ejemplo--->
```cpp
#include <iostream>
using namespace std;

int main() {
    int dia = 3;
    switch (dia) {
        case 1:
            cout << "Lunes" << endl;
            break;
        case 2:
            cout << "Martes" << endl;
            break;
        case 3:
            cout << "Miércoles" << endl;
            break;
        case 4:
            cout << "Jueves" << endl;
            break;
        case 5:
            cout << "Viernes" << endl;
            break;
        case 6:
            cout << "Sábado" << endl;
            break;
        case 7:
            cout << "Domingo" << endl;
            break;
        default:
            cout << "Día no válido" << endl;
            break;
    }
    return 0;
}
```cpp
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Introduce un número: ";
    cin >> numero;

    if (numero > 0) {
        cout << "El número es positivo." << endl;
    } else if (numero < 0) {
        cout << "El número es negativo." << endl;
    } else {
        cout << "El número es cero." << endl;
    }

    char opcion;
    cout << "Introduce una opción (a, b, c): ";
    cin >> opcion;

    switch (opcion) {
        case 'a':
            cout << "Opción A seleccionada." << endl;
            break;
        case 'b':
            cout << "Opción B seleccionada." << endl;
            break;
        case 'c':
            cout << "Opción C seleccionada." << endl;
            break;
        default:
            cout << "Opción no válida." << endl;
            break;
    }

    return 0;
}
<---Ejemplo Result--->
