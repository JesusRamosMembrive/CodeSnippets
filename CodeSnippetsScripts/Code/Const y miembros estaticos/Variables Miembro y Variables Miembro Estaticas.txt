<---EXPLANATION--->
### Variables Miembro y Variables Miembro Estáticas en C++

En C++, las variables miembro son atributos que pertenecen a instancias específicas de una clase, mientras que las variables miembro estáticas son atributos que pertenecen a la clase en sí y son compartidas por todas las instancias de esa clase. Comprender la diferencia entre estas dos tipos de variables es esencial para aprovechar al máximo las capacidades de la programación orientada a objetos en C++.

#### Variables Miembro

Las variables miembro son atributos de una clase que existen independientemente en cada instancia de la clase. Cada objeto de la clase tiene su propia copia de estas variables, y sus valores pueden ser diferentes para cada objeto.

##### Declaración y Uso de Variables Miembro

```cpp
#include <iostream>
using namespace std;

class Persona {
private:
    string nombre;
    int edad;

public:
    // Constructor
    Persona(string n, int e) : nombre(n), edad(e) {}

    // Método para mostrar información
    void mostrarInformacion() const {
        cout << "Nombre: " << nombre << ", Edad: " << edad << endl;
    }
};

int main() {
    Persona p1("Juan", 30);
    Persona p2("Maria", 25);

    p1.mostrarInformacion(); // Muestra: Nombre: Juan, Edad: 30
    p2.mostrarInformacion(); // Muestra: Nombre: Maria, Edad: 25

    return 0;
}
```

En este ejemplo, `nombre` y `edad` son variables miembro de la clase `Persona`. Cada instancia de `Persona` (`p1` y `p2`) tiene su propia copia de estas variables.

#### Variables Miembro Estáticas

Las variables miembro estáticas, por otro lado, son atributos que pertenecen a la clase en sí y no a instancias individuales. Solo existe una copia de una variable miembro estática, compartida por todas las instancias de la clase. Las variables estáticas se utilizan comúnmente para almacenar datos que deben ser comunes a todas las instancias de una clase.

##### Declaración y Uso de Variables Miembro Estáticas

1. **Declaración en la Clase:** Se declaran dentro de la clase con la palabra clave `static`.
2. **Definición Fuera de la Clase:** Deben ser definidas fuera de la clase para que el compilador las asigne.

##### Ejemplo de Variables Miembro Estáticas

```cpp
#include <iostream>
using namespace std;

class Contador {
private:
    static int cuenta; // Declaración de variable miembro estática

public:
    Contador() {
        cuenta++;
    }

    ~Contador() {
        cuenta--;
    }

    static int obtenerCuenta() {
        return cuenta;
    }
};

// Definición de la variable miembro estática
int Contador::cuenta = 0;

int main() {
    Contador c1;
    Contador c2;

    cout << "Número de objetos Contador: " << Contador::obtenerCuenta() << endl; // Muestra: 2

    {
        Contador c3;
        cout << "Número de objetos Contador: " << Contador::obtenerCuenta() << endl; // Muestra: 3
    }

    cout << "Número de objetos Contador: " << Contador::obtenerCuenta() << endl; // Muestra: 2

    return 0;
}
```

En este ejemplo:
- `cuenta` es una variable miembro estática de la clase `Contador`.
- La variable `cuenta` es incrementada en el constructor y decrementada en el destructor, rastreando el número de instancias de `Contador`.
- `obtenerCuenta` es un método estático que devuelve el valor de `cuenta`.

#### Diferencias Clave entre Variables Miembro y Variables Miembro Estáticas

1. **Alcance y Vida Útil:**
   - **Variables Miembro:** Existen por separado en cada instancia de la clase y tienen la vida útil del objeto.
   - **Variables Miembro Estáticas:** Existen una sola vez, independientemente del número de instancias, y tienen la vida útil del programa.

2. **Acceso:**
   - **Variables Miembro:** Accedidas a través de objetos de la clase.
   - **Variables Miembro Estáticas:** Pueden ser accedidas a través de la clase o de objetos de la clase.

3. **Inicialización:**
   - **Variables Miembro:** Se inicializan cuando se crea un objeto.
   - **Variables Miembro Estáticas:** Deben ser definidas fuera de la clase y se pueden inicializar en esa definición.

##### Ejemplo de Diferencias

```cpp
#include <iostream>
using namespace std;

class Ejemplo {
private:
    int instanciaVariable;       // Variable miembro
    static int estaticaVariable; // Variable miembro estática

public:
    Ejemplo(int valor) : instanciaVariable(valor) {
        estaticaVariable += valor;
    }

    void mostrarVariables() const {
        cout << "Instancia Variable: " << instanciaVariable << endl;
        cout << "Estatica Variable: " << estaticaVariable << endl;
    }

    static void mostrarEstatica() {
        cout << "Estatica Variable: " << estaticaVariable << endl;
    }
};

// Definición de la variable miembro estática
int Ejemplo::estaticaVariable = 0;

int main() {
    Ejemplo e1(10);
    Ejemplo e2(20);

    e1.mostrarVariables(); // Muestra: Instancia Variable: 10, Estatica Variable: 30
    e2.mostrarVariables(); // Muestra: Instancia Variable: 20, Estatica Variable: 30

    Ejemplo::mostrarEstatica(); // Muestra: Estatica Variable: 30

    return 0;
}
```

En este ejemplo:
- `instanciaVariable` es una variable miembro y tiene un valor diferente en cada instancia (`e1` y `e2`).
- `estaticaVariable` es una variable miembro estática y su valor es compartido por todas las instancias.

### Conclusión

Las variables miembro y las variables miembro estáticas en C++ son herramientas fundamentales para la gestión de datos en la programación orientada a objetos. Las variables miembro permiten que cada instancia de una clase mantenga su propio estado, mientras que las variables miembro estáticas permiten compartir datos entre todas las instancias de una clase. Entender cómo y cuándo usar estos tipos de variables es crucial para diseñar clases eficientes y efectivas en C++.
<---FILES--->
Declaración y Uso de Variables Miembro
Declaración y Uso de Variables Miembro Result
Declaración y Uso de Variables Miembro Estáticas
Declaración y Uso de Variables Miembro Estáticas Result
Ejemplo de Variables Miembro Estáticas
Ejemplo de Variables Miembro Estáticas Result
Ejemplo de Diferencias
Ejemplo de Diferencias Result
<---Declaración y Uso de Variables Miembro--->
```cpp
#include <iostream>
using namespace std;

class Persona {
private:
    string nombre;
    int edad;

public:
    // Constructor
    Persona(string n, int e) : nombre(n), edad(e) {}

    // Método para mostrar información
    void mostrarInformacion() const {
        cout << "Nombre: " << nombre << ", Edad: " << edad << endl;
    }
};

int main() {
    Persona p1("Juan", 30);
    Persona p2("Maria", 25);

    p1.mostrarInformacion(); // Muestra: Nombre: Juan, Edad: 30
    p2.mostrarInformacion(); // Muestra: Nombre: Maria, Edad: 25

    return 0;
}
<---Declaración y Uso de Variables Miembro Result--->
<---Declaración y Uso de Variables Miembro Estáticas--->
<---Declaración y Uso de Variables Miembro Estáticas Result--->
<---Ejemplo de Variables Miembro Estáticas--->
```cpp
#include <iostream>
using namespace std;

class Contador {
private:
    static int cuenta; // Declaración de variable miembro estática

public:
    Contador() {
        cuenta++;
    }

    ~Contador() {
        cuenta--;
    }

    static int obtenerCuenta() {
        return cuenta;
    }
};

// Definición de la variable miembro estática
int Contador::cuenta = 0;

int main() {
    Contador c1;
    Contador c2;

    cout << "Número de objetos Contador: " << Contador::obtenerCuenta() << endl; // Muestra: 2

    {
        Contador c3;
        cout << "Número de objetos Contador: " << Contador::obtenerCuenta() << endl; // Muestra: 3
    }

    cout << "Número de objetos Contador: " << Contador::obtenerCuenta() << endl; // Muestra: 2

    return 0;
}
<---Ejemplo de Variables Miembro Estáticas Result--->
<---Ejemplo de Diferencias--->
```cpp
#include <iostream>
using namespace std;

class Ejemplo {
private:
    int instanciaVariable;       // Variable miembro
    static int estaticaVariable; // Variable miembro estática

public:
    Ejemplo(int valor) : instanciaVariable(valor) {
        estaticaVariable += valor;
    }

    void mostrarVariables() const {
        cout << "Instancia Variable: " << instanciaVariable << endl;
        cout << "Estatica Variable: " << estaticaVariable << endl;
    }

    static void mostrarEstatica() {
        cout << "Estatica Variable: " << estaticaVariable << endl;
    }
};

// Definición de la variable miembro estática
int Ejemplo::estaticaVariable = 0;

int main() {
    Ejemplo e1(10);
    Ejemplo e2(20);

    e1.mostrarVariables(); // Muestra: Instancia Variable: 10, Estatica Variable: 30
    e2.mostrarVariables(); // Muestra: Instancia Variable: 20, Estatica Variable: 30

    Ejemplo::mostrarEstatica(); // Muestra: Estatica Variable: 30

    return 0;
}
<---Ejemplo de Diferencias Result--->
