<---EXPLANATION--->
### Variables y Constantes en C++

#### 1. **Variables**

Las variables son contenedores que almacenan datos y cuyo valor puede cambiar durante la ejecución del programa. Para declarar una variable, se especifica su tipo seguido del nombre de la variable.

##### **Declaración y Asignación**

```cpp
int edad;            // Declaración de una variable entera
edad = 25;           // Asignación de un valor a la variable

float altura = 1.75; // Declaración y asignación en una sola línea
```

##### **Tipos Comunes de Variables**

- **Entero (`int`):** Almacena números enteros.
- **Flotante (`float`):** Almacena números con decimales.
- **Doble (`double`):** Almacena números con mayor precisión decimal.
- **Carácter (`char`):** Almacena un solo carácter.
- **Booleano (`bool`):** Almacena valores `true` o `false`.

##### **Ejemplo de Uso de Variables**

```cpp
#include <iostream>
using namespace std;

int main() {
    int edad = 25;
    float altura = 1.75;
    char inicial = 'J';
    bool esEstudiante = true;

    cout << "Edad: " << edad << endl;
    cout << "Altura: " << altura << endl;
    cout << "Inicial: " << inicial << endl;
    cout << "Es estudiante: " << (esEstudiante ? "Sí" : "No") << endl;

    return 0;
}
```

#### 2. **Constantes**

Las constantes son similares a las variables, pero su valor no puede cambiar una vez asignado. Se utilizan para valores que deben permanecer constantes durante la ejecución del programa. En C++, se pueden definir constantes utilizando la palabra clave `const` o la directiva de preprocesador `#define`.

##### **Constantes con `const`**

```cpp
const int DIAS_EN_SEMANA = 7;
const float PI = 3.14159;
```

##### **Constantes con `#define`**

```cpp
#define MESES_EN_ANO 12
#define GRAVEDAD 9.81
```

##### **Ejemplo de Uso de Constantes**

```cpp
#include <iostream>
using namespace std;

#define MESES_EN_ANO 12

int main() {
    const int DIAS_EN_SEMANA = 7;
    const float PI = 3.14159;
    int dias = 365;

    cout << "Días en una semana: " << DIAS_EN_SEMANA << endl;
    cout << "Pi: " << PI << endl;
    cout << "Meses en un año: " << MESES_EN_ANO << endl;
    cout << "Días en un año: " << dias << endl;

    // Intentar modificar una constante resultará en un error
    // DIAS_EN_SEMANA = 8; // Error: no se puede asignar un nuevo valor a una constante

    return 0;
}
```

### Diferencias Clave entre Variables y Constantes

- **Mutabilidad:**
  - **Variables:** Su valor puede cambiar durante la ejecución del programa.
  - **Constantes:** Su valor no puede cambiar una vez asignado.

- **Sintaxis de Declaración:**
  - **Variables:** Tipo seguido del nombre de la variable.
  - **Constantes:** `const` seguido del tipo y el nombre de la constante, o `#define` seguido del nombre y el valor de la constante.

### Buenas Prácticas

- Utiliza constantes para valores que no deben cambiar para mejorar la legibilidad y el mantenimiento del código.
- Nombra las constantes utilizando letras mayúsculas y separadores de subrayado (`_`) para distinguirlas fácilmente de las variables.
- Declara variables lo más cerca posible de su primer uso para mejorar la claridad del código y evitar errores.

Estas prácticas te ayudarán a escribir código más claro y fácil de mantener, asegurando que los valores importantes no se modifiquen accidentalmente durante la ejecución del programa.
<---FILES--->
**Declaración y Asignación**
**Declaración y Asignación** Result
**Tipos Comunes de Variables**
**Tipos Comunes de Variables** Result
**Ejemplo de Uso de Variables**
**Ejemplo de Uso de Variables** Result
**Constantes con `const`**
**Constantes con `const`** Result
**Constantes con `#define`**
**Constantes con `#define`** Result
**Ejemplo de Uso de Constantes**
**Ejemplo de Uso de Constantes** Result
<---**Declaración y Asignación**--->
```cpp
int edad;            // Declaración de una variable entera
edad = 25;           // Asignación de un valor a la variable

float altura = 1.75; // Declaración y asignación en una sola línea
<---**Declaración y Asignación** Result--->
<---**Tipos Comunes de Variables**--->
<---**Tipos Comunes de Variables** Result--->
<---**Ejemplo de Uso de Variables**--->
```cpp
#include <iostream>
using namespace std;

int main() {
    int edad = 25;
    float altura = 1.75;
    char inicial = 'J';
    bool esEstudiante = true;

    cout << "Edad: " << edad << endl;
    cout << "Altura: " << altura << endl;
    cout << "Inicial: " << inicial << endl;
    cout << "Es estudiante: " << (esEstudiante ? "Sí" : "No") << endl;

    return 0;
}
<---**Ejemplo de Uso de Variables** Result--->
<---**Constantes con `const`**--->
```cpp
const int DIAS_EN_SEMANA = 7;
const float PI = 3.14159;
<---**Constantes con `const`** Result--->
<---**Constantes con `#define`**--->
```cpp
#define MESES_EN_ANO 12
#define GRAVEDAD 9.81
<---**Constantes con `#define`** Result--->
<---**Ejemplo de Uso de Constantes**--->
```cpp
#include <iostream>
using namespace std;

#define MESES_EN_ANO 12

int main() {
    const int DIAS_EN_SEMANA = 7;
    const float PI = 3.14159;
    int dias = 365;

    cout << "Días en una semana: " << DIAS_EN_SEMANA << endl;
    cout << "Pi: " << PI << endl;
    cout << "Meses en un año: " << MESES_EN_ANO << endl;
    cout << "Días en un año: " << dias << endl;

    // Intentar modificar una constante resultará en un error
    // DIAS_EN_SEMANA = 8; // Error: no se puede asignar un nuevo valor a una constante

    return 0;
}
<---**Ejemplo de Uso de Constantes** Result--->
