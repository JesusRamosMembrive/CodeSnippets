---FILES---
main.cpp
result

---main.cpp---
#include <iostream>

int main(){
    
	int value {45};
    
    std::cout << "The value is : " << value << std::endl;
    
    std::cout << std::endl;
    value = value + 5;
    //value +=5; // equivalent to value = value + 5
    std::cout << "The value is (after +=5) : " << value << std::endl; // 50

    std::cout << std::endl;
    value -=5; // equivalent to value = value - 5
    std::cout << "The value is (after -=5) : " << value << std::endl; // 45 

    std::cout << std::endl;
    value *=2;
    std::cout << "The value is (after *=2) : " << value << std::endl; // 90

    std::cout << std::endl;
    value /= 3;
    std::cout << "The value is (after /=3) : " << value << std::endl; // 30

    std::cout << std::endl;
    value %= 11;
    std::cout << "The value is (after %=11) : " << value << std::endl;// 8
    return 0;
}

---result---
The value is : 45

The value is (after +=5) : 50

The value is (after -=5) : 45

The value is (after *=2) : 90

The value is (after /=3) : 30

The value is (after %=11) : 8

---EXPLANATION---
### Operadores de Asignación Compuestos en C++

En C++, los operadores de asignación compuestos permiten realizar operaciones aritméticas y asignar el resultado a la variable original en un solo paso. Estos operadores son una forma compacta y eficiente de escribir ciertas operaciones comunes. A continuación, se explica cómo funcionan estos operadores con ejemplos.

#### Ejemplo Básico

Supongamos que tenemos una variable `value` inicializada con el valor `45`.

#### Operador `+=`

El operador `+=` suma un valor a la variable y asigna el resultado a la variable.

- **Antes:** `value = value + 5`
- **Después:** `value += 5`
- **Resultado:** `50`

#### Operador `-=`

El operador `-=` resta un valor de la variable y asigna el resultado a la variable.

- **Antes:** `value = value - 5`
- **Después:** `value -= 5`
- **Resultado:** `45`

#### Operador `*=`

El operador `*=` multiplica la variable por un valor y asigna el resultado a la variable.

- **Antes:** `value = value * 2`
- **Después:** `value *= 2`
- **Resultado:** `90`

#### Operador `/=`

El operador `/=` divide la variable por un valor y asigna el resultado a la variable.

- **Antes:** `value = value / 3`
- **Después:** `value /= 3`
- **Resultado:** `30`

#### Operador `%=`

El operador `%=` calcula el módulo de la variable con un valor y asigna el resultado a la variable.

- **Antes:** `value = value % 11`
- **Después:** `value %= 11`
- **Resultado:** `8`

### Conclusión

Los operadores de asignación compuestos (`+=`, `-=`, `*=`, `/=`, `%=`) en C++ proporcionan una manera concisa de realizar y asignar resultados de operaciones aritméticas. Usar estos operadores puede hacer que el código sea más legible y eficiente al reducir la cantidad de escritura necesaria para realizar operaciones comunes. Es importante comprender cómo funcionan estos operadores para utilizarlos correctamente y evitar errores en las asignaciones.

